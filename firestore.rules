rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Users can read and write their own user document
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Users can read other users' public information (for social features)
    match /users/{userId} {
      allow read: if request.auth != null && 
                     resource.data.keys().hasAny(['name', 'photoUrl', 'email']);
    }
    
    // Users can read and write their own collections
    match /users/{userId}/collections/{collectionId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Users can read and write their own favorites
    match /users/{userId}/favorites/{favoriteId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Users can read and write their own AR scans/discoveries
    match /users/{userId}/discoveries/{discoveryId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Users can read and write their own stats
    match /users/{userId}/stats/{statId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Allow authenticated users to read public anime/character data
    match /anime/{animeId} {
      allow read: if request.auth != null;
    }
    
    match /characters/{characterId} {
      allow read: if request.auth != null;
    }
    
    // Social features - users can share discoveries publicly
    match /public_discoveries/{discoveryId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && 
                       request.auth.uid == resource.data.userId;
      allow update, delete: if request.auth != null && 
                            request.auth.uid == resource.data.userId;
    }
    
    // Comments on discoveries
    match /public_discoveries/{discoveryId}/comments/{commentId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && 
                       request.auth.uid == resource.data.userId;
      allow update, delete: if request.auth != null && 
                            request.auth.uid == resource.data.userId;
    }
  }
}
